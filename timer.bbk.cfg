//  _   _                     _     _     _
// | | (_)                   | |   | |   | |
// | |_ _ _ __ ___   ___ _ __| |__ | |__ | | __
// | __| | '_ ` _ \ / _ \ '__| '_ \| '_ \| |/ /
// | |_| | | | | | |  __/ |_ | |_) | |_) |   <
//  \__|_|_| |_| |_|\___|_(_)|_.__/|_.__/|_|\_\


//----------------------------------------------------------------------------------------------------------------------//
//                                                                                                                      //
// Description:                                                                                                         //
//                                                                                                                      //
//   timer.bbk is a simple tool to easily set up a timer for the enemy's spawn time with different intervals.           //
//   You first select an interval by stepping through them, and then sync the timer at the moment they spawn.           //
//                                                                                                                      //
//                                                                                                                      //
// Usage:                                                                                                               //
//                                                                                                                      //
//   bind <key> vstr timer_sync               | start the timer with the currently selected interval                    //
//                                            | selected interval starts on %20 and can be changed with commands        //
//                                                                                                                      //
//   bind <key> vstr timer_up                 | selects the next larger interval (increment by 5, max %30)              //
//                                            | optionally append _silent to not show selection message                 //
//                                                                                                                      //
//   bind <key> vstr timer_down               | selects the next smaller interval (decrement by 5, min %15)             //
//                                            | optionally append _silent to not show selection message                 //
//                                                                                                                      //
//   bind <key> vstr timer_set_interval_<xx>  | selected interval <xx>                                                  //
//                                            | <xx> can be: 15, 20, 25 or 30                                           //
//                                            | optionally append _silent to not show selection message                 //
//                                                                                                                      //
//------------------------------------------------------------------------------------------------------------ by bbk --//



// Interval picker (starts on %20)

// 15%
seta timer_set_interval_15 "echo ^WTimer^f.^wset(^d15^w); vstr timer_set_interval_15_silent"
seta timer_set_interval_15_silent "seta timer_sync vstr timer_15; seta timer_down vstr timer_set_interval_15; seta timer_down_silent vstr timer_set_interval_15_silent; seta timer_up vstr timer_set_interval_20; seta timer_up_silent vstr timer_set_interval_20_silent"

// %20
seta timer_set_interval_20 "echo ^WTimer^f.^wset(^d20^w); vstr timer_set_interval_20_silent"
seta timer_set_interval_20_silent "seta timer_sync vstr timer_20; seta timer_down vstr timer_set_interval_15; seta timer_down_silent vstr timer_set_interval_15_silent; seta timer_up vstr timer_set_interval_25; seta timer_up_silent vstr timer_set_interval_25_silent"

// %25
seta timer_set_interval_25 "echo ^WTimer^f.^wset(^d25^w); vstr timer_set_interval_25_silent"
seta timer_set_interval_25_silent "seta timer_sync vstr timer_25; seta timer_down vstr timer_set_interval_20; seta timer_down_silent vstr timer_set_interval_20_silent; seta timer_up vstr timer_set_interval_30; seta timer_up_silent vstr timer_set_interval_30_silent"

// %30
seta timer_set_interval_30 "echo ^WTimer^f.^wset(^d30^w); vstr timer_set_interval_30_silent"
seta timer_set_interval_30_silent "seta timer_sync vstr timer_30; seta timer_down vstr timer_set_interval_25; seta timer_down_silent vstr timer_set_interval_25_silent; seta timer_up vstr timer_set_interval_30; seta timer_up_silent vstr timer_set_interval_30_silent"



// Timer commands
seta timer_15 "timerset 15"
seta timer_20 "timerset 20"
seta timer_25 "timerset 25"
seta timer_30 "timerset 30"



// This is the end
echo ^d#^winclude ^d<^wtimer.b^fb^dk^w.cfg^d>
