//      _       _                      _     _     _
//     | |     | |                    | |   | |   | |
//  ___| |_ ___| |__   __ _ _ __ ___  | |__ | |__ | | __
// / __| __/ __| '_ \ / _` | '__/ _ \ | '_ \| '_ \| |/ /
// \__ \ |_\__ \ | | | (_| | | |  __/_| |_) | |_) |   <
// |___/\__|___/_| |_|\__,_|_|  \___(_)_.__/|_.__/|_|\_\


//-----------------------------------------------------------------------------------------------------------------------//
//                                                                                                                       //
// Description:                                                                                                          //
//                                                                                                                       //
//   stshare.bbk is a tool to quickly inform your teammates of the enemy's spawn timer.                                  //
//   You can either call input mode for a specific interval directly, or you can first select an interval by stepping    //
//   through them and then enter input mode for the currently selected interval.                                         //
//   Once you are in input mode, use the keypad to type the last two digits of the objective timer at the moment         //
//   the enemy spawned. A message containing their spawn times will be sent in teamchat.                                 //
//                                                                                                                       //
//                                                                                                                       //
// Usage:                                                                                                                //
//                                                                                                                       //
//   bind <key> vstr stshare_<xx>               | enter input mode for the spawntimer using the keypad for interval <xx> //
//                                              | <xx> can be: 15 ,20 or 30                                              //
//                                                                                                                       //
//   bind <key> vstr stshare                    | enter input mode for the spawntimer using the keypad for the           //
//                                              | currently selected interval (starts on %20)                            //
//                                                                                                                       //
//   bind <key> vstr stshare_up                 | selects the next larger interval (increment by 5, max %30)             //
//                                              | optionally append _silent to not show selection message                //
//                                                                                                                       //
//   bind <key> vstr stshare_down               | selects the next smaller interval (decrement by 5, min %15)            //
//                                              | optionally append _silent to not show selection message                //
//                                                                                                                       //
//   bind <key> vstr stshare_set_interval_<xx>  | set selected interval to <xx>                                          //
//                                              | <xx> can be: 15, 20, 25 or 30                                          //
//                                              | optionally append _silent to not show selection message                //
//                                                                                                                       //
//   bind <key> vstr stshare_last               | resends the last spawntimes you entered                                //
//                                                                                                                       //
//   seta kp_rebind "..."                       | set this var to reset your keypad binds (if any)                       //
//                                                                                                                       //
//------------------------------------------------------------------------------------------------------------- by bbk --//



// Interval picker (starts on %20)

// 15%
seta stshare_set_interval_15 "echo ^WTimer^f.^wset(^d15^w); vstr stshare_set_interval_15_silent; vstr play_sound_interval_select"
seta stshare_set_interval_15_silent "seta stshare vstr stshare_15; seta stshare_down vstr stshare_set_interval_15; seta stshare_down_silent vstr stshare_set_interval_15_silent; seta stshare_up vstr stshare_set_interval_20; seta stshare_up_silent vstr stshare_set_interval_20_silent"

// %20
seta stshare_set_interval_20 "echo ^WTimer^f.^wset(^d20^w); vstr stshare_set_interval_20_silent; vstr play_sound_interval_select"
seta stshare_set_interval_20_silent "seta stshare vstr stshare_20; seta stshare_down vstr stshare_set_interval_15; seta stshare_down_silent vstr stshare_set_interval_15_silent; seta stshare_up vstr stshare_set_interval_25; seta stshare_up_silent vstr stshare_set_interval_25_silent"
vstr stshare_set_interval_20_silent;

// %25 (dummy)
seta stshare_25 "echo ^dError^f:^w Spawntime sharer is not implemented for interval 25; vstr play_sound_interval_select"
seta stshare_set_interval_25 "echo ^WTimer^f.^wset(^d25^w); vstr stshare_set_interval_25_silent"
seta stshare_set_interval_25_silent "seta stshare vstr stshare_25; seta stshare_down vstr stshare_set_interval_20; seta stshare_down_silent vstr stshare_set_interval_20_silent; seta stshare_up vstr stshare_set_interval_30; seta stshare_up_silent vstr stshare_set_interval_30_silent"

// %30
seta stshare_set_interval_30 "echo ^WTimer^f.^wset(^d30^w); vstr stshare_set_interval_30_silent; vstr play_sound_interval_select"
seta stshare_set_interval_30_silent "seta stshare vstr stshare_30; seta stshare_down vstr stshare_set_interval_25; seta stshare_down_silent vstr stshare_set_interval_25_silent; seta stshare_up vstr stshare_set_interval_30; seta stshare_up_silent vstr stshare_set_interval_30_silent"



// Spawn time entry

// 15 seconds interval (sw_oasis,...)
seta stshare_15 "bind KP_INS vstr 0x_15; bind KP_END vstr 1x_15; bind KP_DOWNARROW vstr 2x_15; bind KP_PGDN vstr 0x_15; bind KP_LEFTARROW vstr 1x_15; bind KP_5 vstr 2x_15"

seta 0x_15 "bind KP_INS vstr 00_15; bind KP_END vstr 01_15; bind KP_DOWNARROW vstr 02_15; bind KP_PGDN vstr 03_15; bind KP_LEFTARROW vstr 04_15; bind KP_5 vstr 05_15; bind KP_RIGHTARROW vstr 06_15; bind KP_HOME vstr 07_15; bind KP_UPARROW vstr 08_15; bind KP_PGUP vstr 09_15"
seta 1x_15 "bind KP_INS vstr 10_15; bind KP_END vstr 11_15; bind KP_DOWNARROW vstr 12_15; bind KP_PGDN vstr 13_15; bind KP_LEFTARROW vstr 14_15; bind KP_5 vstr 00_15; bind KP_RIGHTARROW vstr 01_15; bind KP_HOME vstr 02_15; bind KP_UPARROW vstr 03_15; bind KP_PGUP vstr 04_15"
seta 2x_15 "bind KP_INS vstr 05_15; bind KP_END vstr 06_15; bind KP_DOWNARROW vstr 07_15; bind KP_PGDN vstr 08_15; bind KP_LEFTARROW vstr 09_15; bind KP_5 vstr 10_15; bind KP_RIGHTARROW vstr 11_15; bind KP_HOME vstr 12_15; bind KP_UPARROW vstr 13_15; bind KP_PGUP vstr 14_15"



// 20 seconds interval (allies default)
seta stshare_20 "bind KP_INS vstr 0x_20; bind KP_END vstr 1x_20; bind KP_DOWNARROW vstr 0x_20; bind KP_PGDN vstr 1x_20; bind KP_LEFTARROW vstr 0x_20; bind KP_5 vstr 1x_20"

seta 0x_20 "bind KP_INS vstr 00_20; bind KP_END vstr 01_20; bind KP_DOWNARROW vstr 02_20; bind KP_PGDN vstr 03_20; bind KP_LEFTARROW vstr 04_20; bind KP_5 vstr 05_20; bind KP_RIGHTARROW vstr 06_20; bind KP_HOME vstr 07_20; bind KP_UPARROW vstr 08_20; bind KP_PGUP vstr 09_20"
seta 1x_20 "bind KP_INS vstr 01_20; bind KP_END vstr 11_20; bind KP_DOWNARROW vstr 12_20; bind KP_PGDN vstr 13_20; bind KP_LEFTARROW vstr 14_20; bind KP_5 vstr 15_20; bind KP_RIGHTARROW vstr 16_20; bind KP_HOME vstr 17_20; bind KP_UPARROW vstr 18_20; bind KP_PGUP vstr 19_20"



// 30 seconds interval (axis default)
seta stshare_30 "bind KP_INS vstr 0x_30; bind KP_END vstr 1x_30; bind KP_DOWNARROW vstr 2x_30; bind KP_PGDN vstr 0x_30; bind KP_LEFTARROW vstr 1x_30; bind KP_5 vstr 2x_30"

seta 0x_30 "bind KP_INS vstr 00_30; bind KP_END vstr 01_30; bind KP_DOWNARROW vstr 02_30; bind KP_PGDN vstr 03_30; bind KP_LEFTARROW vstr 04_30; bind KP_5 vstr 05_30; bind KP_RIGHTARROW vstr 06_30; bind KP_HOME vstr 07_30; bind KP_UPARROW vstr 08_30; bind KP_PGUP vstr 09_30"
seta 1x_30 "bind KP_INS vstr 10_30; bind KP_END vstr 11_30; bind KP_DOWNARROW vstr 12_30; bind KP_PGDN vstr 13_30; bind KP_LEFTARROW vstr 14_30; bind KP_5 vstr 15_30; bind KP_RIGHTARROW vstr 16_30; bind KP_HOME vstr 17_30; bind KP_UPARROW vstr 18_30; bind KP_PGUP vstr 19_30"
seta 2x_30 "bind KP_INS vstr 20_30; bind KP_END vstr 21_30; bind KP_DOWNARROW vstr 22_30; bind KP_PGDN vstr 23_30; bind KP_LEFTARROW vstr 24_30; bind KP_5 vstr 25_30; bind KP_RIGHTARROW vstr 26_30; bind KP_HOME vstr 27_30; bind KP_UPARROW vstr 28_30; bind KP_PGUP vstr 29_30"

// Entry cleanup
seta stshare_reset vstr kp_reset;
seta kp_reset "unbind KP_INS; unbind KP_END; unbind KP_DOWNARROW; unbind KP_PGDN; unbind KP_LEFTARROW; unbind KP_5; unbind KP_RIGHTARROW; unbind KP_HOME; unbind KP_UPARROW; unbind KP_PGUP; vstr kp_rebind"



// Message data

// %15
seta 00_15 "seta stshare_last say_teamnl ^w00 ^f~^w 15 ^d~^w 30 ^f~^w 45; vstr stshare_last; vstr stshare_reset"
seta 01_15 "seta stshare_last say_teamnl ^w01 ^f~^w 16 ^d~^w 31 ^f~^w 46; vstr stshare_last; vstr stshare_reset"
seta 02_15 "seta stshare_last say_teamnl ^w02 ^f~^w 17 ^d~^w 32 ^f~^w 47; vstr stshare_last; vstr stshare_reset"
seta 03_15 "seta stshare_last say_teamnl ^w03 ^f~^w 18 ^d~^w 33 ^f~^w 48; vstr stshare_last; vstr stshare_reset"
seta 04_15 "seta stshare_last say_teamnl ^w04 ^f~^w 19 ^d~^w 34 ^f~^w 49; vstr stshare_last; vstr stshare_reset"
seta 05_15 "seta stshare_last say_teamnl ^w05 ^f~^w 20 ^d~^w 35 ^f~^w 50; vstr stshare_last; vstr stshare_reset"
seta 06_15 "seta stshare_last say_teamnl ^w06 ^f~^w 21 ^d~^w 36 ^f~^w 51; vstr stshare_last; vstr stshare_reset"
seta 07_15 "seta stshare_last say_teamnl ^w07 ^f~^w 22 ^d~^w 37 ^f~^w 52; vstr stshare_last; vstr stshare_reset"
seta 08_15 "seta stshare_last say_teamnl ^w08 ^f~^w 23 ^d~^w 38 ^f~^w 53; vstr stshare_last; vstr stshare_reset"
seta 09_15 "seta stshare_last say_teamnl ^w09 ^f~^w 24 ^d~^w 39 ^f~^w 54; vstr stshare_last; vstr stshare_reset"
seta 10_15 "seta stshare_last say_teamnl ^w10 ^f~^w 25 ^d~^w 40 ^f~^w 55; vstr stshare_last; vstr stshare_reset"
seta 11_15 "seta stshare_last say_teamnl ^w11 ^f~^w 26 ^d~^w 41 ^f~^w 56; vstr stshare_last; vstr stshare_reset"
seta 12_15 "seta stshare_last say_teamnl ^w12 ^f~^w 27 ^d~^w 42 ^f~^w 57; vstr stshare_last; vstr stshare_reset"
seta 13_15 "seta stshare_last say_teamnl ^w13 ^f~^w 28 ^d~^w 43 ^f~^w 58; vstr stshare_last; vstr stshare_reset"
seta 14_15 "seta stshare_last say_teamnl ^w14 ^f~^w 29 ^d~^w 44 ^f~^w 59; vstr stshare_last; vstr stshare_reset"

// %20
seta 00_20 "seta stshare_last say_teamnl ^w00 ^f~^w 20 ^d~^w 40; vstr stshare_last; vstr stshare_reset"
seta 01_20 "seta stshare_last say_teamnl ^w01 ^f~^w 21 ^d~^w 41; vstr stshare_last; vstr stshare_reset"
seta 02_20 "seta stshare_last say_teamnl ^w02 ^f~^w 22 ^d~^w 42; vstr stshare_last; vstr stshare_reset"
seta 03_20 "seta stshare_last say_teamnl ^w03 ^f~^w 23 ^d~^w 43; vstr stshare_last; vstr stshare_reset"
seta 04_20 "seta stshare_last say_teamnl ^w04 ^f~^w 24 ^d~^w 44; vstr stshare_last; vstr stshare_reset"
seta 05_20 "seta stshare_last say_teamnl ^w05 ^f~^w 25 ^d~^w 45; vstr stshare_last; vstr stshare_reset"
seta 06_20 "seta stshare_last say_teamnl ^w06 ^f~^w 26 ^d~^w 46; vstr stshare_last; vstr stshare_reset"
seta 07_20 "seta stshare_last say_teamnl ^w07 ^f~^w 27 ^d~^w 47; vstr stshare_last; vstr stshare_reset"
seta 08_20 "seta stshare_last say_teamnl ^w08 ^f~^w 28 ^d~^w 48; vstr stshare_last; vstr stshare_reset"
seta 09_20 "seta stshare_last say_teamnl ^w09 ^f~^w 29 ^d~^w 49; vstr stshare_last; vstr stshare_reset"
seta 10_20 "seta stshare_last say_teamnl ^w10 ^f~^w 30 ^d~^w 50; vstr stshare_last; vstr stshare_reset"
seta 11_20 "seta stshare_last say_teamnl ^w11 ^f~^w 31 ^d~^w 51; vstr stshare_last; vstr stshare_reset"
seta 12_20 "seta stshare_last say_teamnl ^w12 ^f~^w 32 ^d~^w 52; vstr stshare_last; vstr stshare_reset"
seta 13_20 "seta stshare_last say_teamnl ^w13 ^f~^w 33 ^d~^w 53; vstr stshare_last; vstr stshare_reset"
seta 14_20 "seta stshare_last say_teamnl ^w14 ^f~^w 34 ^d~^w 54; vstr stshare_last; vstr stshare_reset"
seta 15_20 "seta stshare_last say_teamnl ^w15 ^f~^w 35 ^d~^w 55; vstr stshare_last; vstr stshare_reset"
seta 16_20 "seta stshare_last say_teamnl ^w16 ^f~^w 36 ^d~^w 56; vstr stshare_last; vstr stshare_reset"
seta 17_20 "seta stshare_last say_teamnl ^w17 ^f~^w 37 ^d~^w 57; vstr stshare_last; vstr stshare_reset"
seta 18_20 "seta stshare_last say_teamnl ^w18 ^f~^w 38 ^d~^w 58; vstr stshare_last; vstr stshare_reset"
seta 19_20 "seta stshare_last say_teamnl ^w19 ^f~^w 39 ^d~^w 59; vstr stshare_last; vstr stshare_reset"

// %30
seta 00_30 "seta stshare_last say_teamnl ^w00 ^f~^w 30; vstr stshare_last; vstr stshare_reset"
seta 01_30 "seta stshare_last say_teamnl ^w01 ^f~^w 31; vstr stshare_last; vstr stshare_reset"
seta 02_30 "seta stshare_last say_teamnl ^w02 ^f~^w 32; vstr stshare_last; vstr stshare_reset"
seta 03_30 "seta stshare_last say_teamnl ^w03 ^f~^w 33; vstr stshare_last; vstr stshare_reset"
seta 04_30 "seta stshare_last say_teamnl ^w04 ^f~^w 34; vstr stshare_last; vstr stshare_reset"
seta 05_30 "seta stshare_last say_teamnl ^w05 ^f~^w 35; vstr stshare_last; vstr stshare_reset"
seta 06_30 "seta stshare_last say_teamnl ^w06 ^f~^w 36; vstr stshare_last; vstr stshare_reset"
seta 07_30 "seta stshare_last say_teamnl ^w07 ^f~^w 37; vstr stshare_last; vstr stshare_reset"
seta 08_30 "seta stshare_last say_teamnl ^w08 ^f~^w 38; vstr stshare_last; vstr stshare_reset"
seta 09_30 "seta stshare_last say_teamnl ^w09 ^f~^w 39; vstr stshare_last; vstr stshare_reset"
seta 10_30 "seta stshare_last say_teamnl ^w10 ^f~^w 40; vstr stshare_last; vstr stshare_reset"
seta 11_30 "seta stshare_last say_teamnl ^w11 ^f~^w 41; vstr stshare_last; vstr stshare_reset"
seta 12_30 "seta stshare_last say_teamnl ^w12 ^f~^w 42; vstr stshare_last; vstr stshare_reset"
seta 13_30 "seta stshare_last say_teamnl ^w13 ^f~^w 43; vstr stshare_last; vstr stshare_reset"
seta 14_30 "seta stshare_last say_teamnl ^w14 ^f~^w 44; vstr stshare_last; vstr stshare_reset"
seta 15_30 "seta stshare_last say_teamnl ^w15 ^f~^w 45; vstr stshare_last; vstr stshare_reset"
seta 16_30 "seta stshare_last say_teamnl ^w16 ^f~^w 46; vstr stshare_last; vstr stshare_reset"
seta 17_30 "seta stshare_last say_teamnl ^w17 ^f~^w 47; vstr stshare_last; vstr stshare_reset"
seta 18_30 "seta stshare_last say_teamnl ^w18 ^f~^w 48; vstr stshare_last; vstr stshare_reset"
seta 19_30 "seta stshare_last say_teamnl ^w19 ^f~^w 49; vstr stshare_last; vstr stshare_reset"
seta 20_30 "seta stshare_last say_teamnl ^w20 ^f~^w 50; vstr stshare_last; vstr stshare_reset"
seta 21_30 "seta stshare_last say_teamnl ^w21 ^f~^w 51; vstr stshare_last; vstr stshare_reset"
seta 22_30 "seta stshare_last say_teamnl ^w22 ^f~^w 52; vstr stshare_last; vstr stshare_reset"
seta 23_30 "seta stshare_last say_teamnl ^w23 ^f~^w 53; vstr stshare_last; vstr stshare_reset"
seta 24_30 "seta stshare_last say_teamnl ^w24 ^f~^w 54; vstr stshare_last; vstr stshare_reset"
seta 25_30 "seta stshare_last say_teamnl ^w25 ^f~^w 55; vstr stshare_last; vstr stshare_reset"
seta 26_30 "seta stshare_last say_teamnl ^w26 ^f~^w 56; vstr stshare_last; vstr stshare_reset"
seta 27_30 "seta stshare_last say_teamnl ^w27 ^f~^w 57; vstr stshare_last; vstr stshare_reset"
seta 28_30 "seta stshare_last say_teamnl ^w28 ^f~^w 58; vstr stshare_last; vstr stshare_reset"
seta 29_30 "seta stshare_last say_teamnl ^w29 ^f~^w 59; vstr stshare_last; vstr stshare_reset"



// Sound commands
seta play_sound_interval_select "play sound/menu/select"



// This is the end
echo ^d#^winclude ^d<^wstshare.b^fb^dk^w.cfg^d>
